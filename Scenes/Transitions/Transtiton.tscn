[gd_scene load_steps=7 format=2]

[ext_resource path="res://Scenes/Transitions/Transtiton.gd" type="Script" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

// Ranges from 0 to 1 over the course of the transition.
// We use this to actually animate the shader.
uniform float progress : hint_range(0, 1);

// Size of each diamond, in pixels.
uniform float diamondPixelSize = 10;

void fragment() {
	float xFraction = fract(FRAGCOORD.x / diamondPixelSize);
	float yFraction = fract(FRAGCOORD.y / diamondPixelSize);
	float xDistance = abs(xFraction - 0.5);
	float yDistance = abs(yFraction - 0.5);
	if (xDistance + yDistance + UV.x + UV.y > progress * 4.0) {
		discard;
	}
}"

[sub_resource type="ShaderMaterial" id=2]
render_priority = 10
shader = SubResource( 1 )
shader_param/progress = 0.0
shader_param/diamondPixelSize = 15.234

[sub_resource type="Animation" id=3]
resource_name = "In"
tracks/0/type = "value"
tracks/0/path = NodePath("Screen:material:shader_param/progress")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 1.0 ]
}

[sub_resource type="Animation" id=4]
resource_name = "Out"
tracks/0/type = "value"
tracks/0/path = NodePath("Screen:material:shader_param/progress")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 0.0 ]
}

[sub_resource type="Animation" id=5]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Screen:material:shader_param/progress")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}

[node name="Transtiton" type="CanvasLayer"]
layer = 10
script = ExtResource( 1 )

[node name="Screen" type="ColorRect" parent="."]
material = SubResource( 2 )
margin_right = 1029.0
margin_bottom = 607.0
mouse_filter = 2
color = Color( 0, 0, 0, 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
pause_mode = 2
anims/In = SubResource( 3 )
anims/Out = SubResource( 4 )
anims/RESET = SubResource( 5 )
